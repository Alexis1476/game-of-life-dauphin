<?xml version="1.0" encoding="utf-16"?>
<Dolphin>
  <Version>1.1.3</Version>
  <ProcessorName>PSI30</ProcessorName>
  <ProcessorIPS>1000000</ProcessorIPS>
  <ProcessorStep>C</ProcessorStep>
  <ProcessorInto>O</ProcessorInto>
  <PanelMode>Calm</PanelMode>
  <DisplayBitmap>Y</DisplayBitmap>
  <DisplayTechno>CRT</DisplayTechno>
  <KeyboardArrows>N</KeyboardArrows>
  <Rem>&lt;b&gt;Introduction&lt;/b&gt;&lt;br/&gt;Le jeu de la vie est un automate cellulaire imaginé par John Horton Conway en 1970.&lt;br/&gt;Le jeu commence avec une situation initiale définie dans le code.&lt;br/&gt;&lt;b&gt;Les règles du jeu sont les suivantes:&lt;/b&gt;&lt;br/&gt;- Mort par sous-population Si une cellule vivante est trop isolée (0 ou 1 voisine) alors elle meurt à l'évolution suivante. &lt;br/&gt;-Mort par surpopulation S'il est entouré de trop de cellules (4 voisines ou plus), il meurt à la génération suivante. &lt;br/&gt;-S'il est raisonnablement entouré (2 ou 3 voisins), il reste en vie. &lt;br/&gt;-Naissance par reproduction Si une cellule morte est entourée de 3 cellules vivantes, elle devient vivante (elle naît) à l'évolution suivante.</Rem>
  <Source>; ETML - CID3A&lt;br/&gt;; Auteur : Alexis Rojas&lt;br/&gt;; Date : 2022 &lt;br/&gt;; Description : Projet jeu de la vie pour le module I242&lt;br/&gt;&lt;br/&gt;SCREEN_WIDTH&lt;tab/&gt;=&lt;tab/&gt;32&lt;tab/&gt;; Largeur de l&amp;apos;écran&lt;br/&gt;SCREEN_HEIGHT&lt;tab/&gt;=&lt;tab/&gt;24&lt;tab/&gt;; Hauteur de l&amp;apos;écran&lt;br/&gt;POS_X &lt;tab/&gt;=&lt;tab/&gt;H&amp;apos;700&lt;tab/&gt;&lt;tab/&gt;; Pos X de la cellule courante&lt;br/&gt;POS_Y&lt;tab/&gt;=&lt;tab/&gt;H&amp;apos;702&lt;tab/&gt;&lt;tab/&gt;; Pos Y de la cellule courante&lt;br/&gt;NB_ALIVE =&lt;tab/&gt;H&amp;apos;703&lt;br/&gt;&lt;br/&gt;; Boucle du jeu&lt;br/&gt;GAME_LOOP : &lt;tab/&gt;&lt;br/&gt;&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;INIT&lt;br/&gt;&lt;br/&gt;; Parcoure l&amp;apos;écran&lt;br/&gt;CHECK_SCREEN :&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;CHECK_NEIGHBOURS&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X&lt;br/&gt;&lt;tab/&gt;COMP &lt;tab/&gt;#SCREEN_WIDTH, X&lt;tab/&gt;; Si dernière colonne&lt;br/&gt;&lt;tab/&gt;JUMP &lt;tab/&gt;LO,  CHECK_SCREEN&lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;NEW_LINE&lt;br/&gt;&lt;br/&gt;; Descende d&amp;apos;une ligne de l&amp;apos;écran&lt;br/&gt;NEW_LINE : &lt;br/&gt;&lt;tab/&gt;CLR&lt;tab/&gt;X&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y&lt;br/&gt;&lt;tab/&gt;COMP &lt;tab/&gt;#SCREEN_HEIGHT, Y&lt;tab/&gt;; Si dernière ligne&lt;br/&gt;&lt;tab/&gt;JUMP &lt;tab/&gt;LO, CHECK_SCREEN&lt;br/&gt;&lt;tab/&gt;;  Fin de lecture de l&amp;apos;écran&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;INIT&lt;br/&gt;&lt;tab/&gt;JUMP&lt;tab/&gt;GAME_LOOP&lt;br/&gt;&lt;br/&gt;; Vérifie l&amp;apos;état des cellules voisines&lt;br/&gt;CHECK_NEIGHBOURS :&lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;X, POS_X&lt;tab/&gt;&lt;tab/&gt;; Garder les coordonnées&lt;br/&gt;&lt;tab/&gt;MOVE&lt;tab/&gt;Y, POS_Y&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_NotPixel&lt;tab/&gt;&lt;tab/&gt;&lt;tab/&gt;&lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;X&lt;tab/&gt;&lt;tab/&gt;; En haut à gauche&lt;br/&gt;&lt;tab/&gt;DEC&lt;tab/&gt;Y&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X&lt;tab/&gt;&lt;tab/&gt;; En haut&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;X&lt;tab/&gt;&lt;tab/&gt;; En haut à droite&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y&lt;tab/&gt;&lt;tab/&gt;; A droite&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;SUB&lt;tab/&gt;#2, Y&lt;tab/&gt;&lt;tab/&gt;; A gauche&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y&lt;tab/&gt;&lt;tab/&gt;; En bas à gauche&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y&lt;tab/&gt;&lt;tab/&gt;; En bas&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;Y&lt;tab/&gt;&lt;tab/&gt;; En bas à droite&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;TEST_PIXEL&lt;br/&gt;&lt;tab/&gt;; Reinitialiser X et Y&lt;br/&gt;&lt;tab/&gt;MOVE &lt;tab/&gt;POS_X, X&lt;br/&gt;&lt;tab/&gt;MOVE &lt;tab/&gt;POS_Y, Y&lt;br/&gt;&lt;tab/&gt;; Conditions avec le nb de pixel allumés&lt;br/&gt;&lt;tab/&gt;;CALL&lt;tab/&gt;CHECK_NB_ALIVE&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;br/&gt;CHECK_NB_ALIVE:&lt;br/&gt;&lt;tab/&gt;; Mort par sous-population&lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#D&amp;apos;2, NB_ALIVE&lt;br/&gt;&lt;tab/&gt;JUMP, LS&lt;tab/&gt;DIE&lt;br/&gt;&lt;tab/&gt;;Mort par surpopulation&lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#D&amp;apos;3, NB_ALIVE&lt;br/&gt;&lt;tab/&gt;JUMP, HI&lt;tab/&gt;DIE&lt;br/&gt;&lt;tab/&gt;;Reste en vie&lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#D&amp;apos;2, NB_ALIVE&lt;br/&gt;&lt;tab/&gt;JUMP, EQ BORN&lt;br/&gt;&lt;tab/&gt;COMP&lt;tab/&gt;#D&amp;apos;3, NB_ALIVE ; Naissance par réproduction aussi&lt;br/&gt;&lt;tab/&gt;JUMP, EQ BORN&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;tab/&gt;&lt;br/&gt;; Une cellule mort&lt;br/&gt;DIE:&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;br/&gt;; Une cellule nait&lt;br/&gt;BORN:&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;br/&gt;; Incrémente le registre A si le pixel est allumé&lt;br/&gt;TEST_PIXEL:&lt;br/&gt;&lt;tab/&gt;CALL&lt;tab/&gt;_TestPixel&lt;br/&gt;&lt;tab/&gt;JUMP, NE&lt;tab/&gt;INC_ALIVE ; Si le pixel est allumé&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;br/&gt;; Initialise le registre X et Y&lt;br/&gt;INIT :&lt;tab/&gt;&lt;tab/&gt;&lt;tab/&gt;&lt;tab/&gt;&lt;br/&gt;&lt;tab/&gt;CLR&lt;tab/&gt;X&lt;br/&gt;&lt;tab/&gt;CLR&lt;tab/&gt;Y&lt;br/&gt;&lt;tab/&gt;RET&lt;br/&gt;&lt;br/&gt;; Incremente le nb de cellules vivantes&lt;br/&gt;INC_ALIVE:&lt;br/&gt;&lt;tab/&gt;INC&lt;tab/&gt;NB_ALIVE&lt;br/&gt;&lt;tab/&gt;RET&lt;tab/&gt;&lt;br/&gt;</Source>
  <MemoryDataemoryData>
</Dolphin>